version: '2'

networks:
  public:
    ${IPAM_PUBLIC}
  internal:
    internal: true
    ${IPAM_PRIVATE}

services:
  fluentd:
    container_name: unms-fluentd
    image: ${DOCKER_IMAGE}-fluentd:${VERSION}
    restart: always
    networks:
      - public
    ports:
      - "127.0.0.1:24224:24224"
    volumes:
      - ${CONFIG_DIR}/fluent.conf:/etc/fluent/fluent.conf
      - ${DATA_DIR}/logs:/fluentd/log
    environment:
      - FLUENTD_UID=${USER_ID}

  redis:
    container_name: unms-redis
    image: redis:3.2.8-alpine
    user: "${USER_ID}"
    restart: always
    depends_on:
      - fluentd
    networks:
      - internal
    volumes:
      - ${DATA_DIR}/redis:/data/db
    logging:
      driver: fluentd
      options:
        tag: "redis"
        fluentd-async-connect: "true"
    command: "redis-server --appendonly yes --dir /data/db/"

  # we still run postgres as root with stepdown to uid 70 until this issue is fixed
  # https://github.com/docker-library/postgres/issues/264
  # and until it's not required to expose host's /etc/passwd to the container
  # https://hub.docker.com/_/postgres/ (see "Arbitrary --user Notes")
  postgres:
    container_name: unms-postgres
    image: postgres:9.6.1-alpine
    command: postgres -c log_min_duration_statement=500
    restart: always
    depends_on:
      - fluentd
    networks:
      - internal
    volumes:
      - ${DATA_DIR}/postgres:/var/lib/postgresql/data/pgdata
    logging:
      driver: fluentd
      options:
        tag: "postgres"
        fluentd-async-connect: "true"
    environment:
      - POSTGRES_DB=unms
      - PGDATA=/var/lib/postgresql/data/pgdata

  rabbitmq:
    container_name: unms-rabbitmq
    image: rabbitmq:3.7.4-alpine
    restart: always
    depends_on:
      - fluentd
    networks:
      - internal
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        tag: "rabbitmq"
        fluentd-async-connect: "true"

  unms:
    container_name: unms
    image: ${DOCKER_IMAGE}:${VERSION}
    restart: always
    depends_on:
      - fluentd
      - redis
      - postgres
    networks:
      - internal
      - public
    volumes:
      - ${DATA_DIR}:/home/app/unms/data
    logging:
      driver: fluentd
      options:
        tag: "unms"
        fluentd-async-connect: "true"
    environment:
      - UNMS_USER_ID=${USER_ID}
      - DEMO=${DEMO}
      - NODE_ENV=${NODE_ENV}
      - HTTP_PORT=${UNMS_HTTP_PORT}
      - WS_PORT=${UNMS_WS_PORT}
      - WS_SHELL_PORT=${UNMS_WS_SHELL_PORT}
      - UNMS_WS_API_PORT=${UNMS_WS_API_PORT}
      - NETFLOW_PORT=${NETFLOW_PORT}
      - SSL_CERT=${SSL_CERT}
      - PUBLIC_HTTPS_PORT=${PUBLIC_HTTPS_PORT}
      - PUBLIC_WS_PORT=${PUBLIC_WS_PORT}
      - HOST_TAG=${HOST_TAG}
      - BRANCH=${BRANCH}
      - http_proxy=${http_proxy}
      - HTTP_PROXY=${HTTP_PROXY}
      - https_proxy=${https_proxy}
      - HTTPS_PROXY=${HTTPS_PROXY}
      - no_proxy=${no_proxy}
      - NO_PROXY=${NO_PROXY}
      - SECURE_LINK_SECRET=${SECURE_LINK_SECRET}
      - CLUSTER_SIZE=${CLUSTER_SIZE}
    cap_add:
      - NET_ADMIN

  nginx:
    image: ${DOCKER_IMAGE}-nginx:${VERSION}
    container_name: unms-nginx
    restart: always
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
      - "${HTTPS_PORT}:${HTTPS_PORT}"
      ${WS_PORT_MAPPING}
    networks:
      - public
    volumes:
      ${CERT_DIR_MAPPING_NGINX}
      ${USERCERT_DIR_MAPPING_NGINX}
      - ${DATA_DIR}/firmwares:/www/firmwares
    depends_on:
      - unms
      - fluentd
    logging:
      driver: fluentd
      options:
        tag: "nginx"
        fluentd-async-connect: "true"
    environment:
      - NGINX_UID=${USER_ID}
      - SSL_CERT=${SSL_CERT}
      - SSL_CERT_KEY=${SSL_CERT_KEY}
      - SSL_CERT_CA=${SSL_CERT_CA}
      - HTTP_PORT=${HTTP_PORT}
      - HTTPS_PORT=${HTTPS_PORT}
      - WS_PORT=${WS_PORT}
      - UNMS_HTTP_PORT=${UNMS_HTTP_PORT}
      - UNMS_WS_PORT=${UNMS_WS_PORT}
      - UNMS_WS_SHELL_PORT=${UNMS_WS_SHELL_PORT}
      - UNMS_WS_API_PORT=${UNMS_WS_API_PORT}
      - PUBLIC_HTTPS_PORT=${PUBLIC_HTTPS_PORT}
      - SECURE_LINK_SECRET=${SECURE_LINK_SECRET}

  netflow:
    image: ${DOCKER_IMAGE}-netflow:${VERSION}
    container_name: unms-netflow
    user: "${USER_ID}"
    restart: always
    ports:
      - "${NETFLOW_PORT}:${NETFLOW_PORT}/udp"
    networks:
      - internal
      - public
    depends_on:
      - fluentd
      - postgres
      - rabbitmq
      - redis
    logging:
      driver: fluentd
      options:
        tag: "netflow"
        fluentd-async-connect: "true"
    environment:
      - NETFLOW_PORT=${NETFLOW_PORT}
